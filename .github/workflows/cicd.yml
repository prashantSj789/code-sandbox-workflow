name: Generate CodeSandbox for Previous and New Commits

on:
  push:
    paths:
      - 'src/app.js'
      - 'src/index.html'
      - 'src/style.css'

jobs:
  generate-codesandbox:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Previous File Contents
        id: prev_content
        run: |
          # Create temporary files to store content
          echo "" > prev_index.html
          echo "" > prev_style.css
          echo "" > prev_app.js

          # Function to get file content if it exists in the previous commit
          get_file_content() {
            if git cat-file -e "${{ github.event.before }}:$1" 2>/dev/null; then
              git show "${{ github.event.before }}:$1" > $2
            else
              echo "" > $2
            fi
          }

          # Retrieve contents of index.html, style.css, and app.js from the previous commit, if they exist
          get_file_content "src/index.html" "prev_index.html"
          get_file_content "src/style.css" "prev_style.css"
          get_file_content "src/app.js" "prev_app.js"

      - name: Get New File Contents
        id: new_content
        run: |
          # Create temporary files to store content
          cp src/index.html new_index.html || echo "" > new_index.html
          cp src/style.css new_style.css || echo "" > new_style.css
          cp src/app.js new_app.js || echo "" > new_app.js

      - name: Create CodeSandbox with New Content
        id: create_new_sandbox
        run: |
            # Prepare JSON payload for current commit files using content from temporary files
            PAYLOAD=$(jq -n --argfile html new_index.html \
                              --argfile css new_style.css \
                              --argfile js new_app.js \
                        '{ files: { "index.html": { content: $html }, "style.css": { content: $css }, "app.js": { content: $js } } }')
        
            # Send the payload to CodeSandbox
            RESPONSE=$(curl -s -X POST 'https://codesandbox.io/api/v1/sandboxes/define?json=1' \
              -H "Content-Type: application/json" \
              -d "$PAYLOAD")
            
            # Extract sandbox_id from the response
            SANDBOX_ID=$(echo "$RESPONSE" | jq -r '.sandbox_id')
            echo "Generated Sandbox ID (New): $SANDBOX_ID"
            echo "::set-output name=new_sandbox_id::$SANDBOX_ID"

      - name: Display CodeSandbox URLs
        run: |
          echo "View the previous CodeSandbox at: https://codesandbox.io/s/${{ steps.create_prev_sandbox.outputs.prev_sandbox_id }}"
          echo "View the new CodeSandbox at: https://codesandbox.io/s/${{ steps.create_new_sandbox.outputs.new_sandbox_id }}"
