
name: Generate CodeSandbox for Previous and New Commits

on:
  push:
    paths:
      - 'src/app.js'
      - 'src/index.html'
      - 'src/style.css'

jobs:
  generate-codesandbox:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Previous File Contents
        id: prev_content
        run: |
          echo "" > prev_index.html
          echo "" > prev_style.css
          echo "" > prev_app.js

          get_file_content() {
            if git cat-file -e "${{ github.event.before }}:$1" 2>/dev/null; then
              git show "${{ github.event.before }}:$1" > $2
            else
              echo "" > $2
            fi
          }

          get_file_content "src/index.html" "prev_index.html"
          get_file_content "src/style.css" "prev_style.css"
          get_file_content "src/app.js" "prev_app.js"

      - name: Get New File Contents
        id: new_content
        run: |
          cp src/index.html new_index.html || echo "" > new_index.html
          cp src/style.css new_style.css || echo "" > new_style.css
          cp src/app.js new_app.js || echo "" > new_app.js

      - name: Create CodeSandbox with Previous Content
        id: create_prev_sandbox
        run: |
          HTML_CONTENT=$(cat prev_index.html | tr '\n' ' ')
          CSS_CONTENT=$(cat prev_style.css | tr '\n' ' ')
          JS_CONTENT=$(cat prev_app.js | tr '\n' ' ')

          PAYLOAD=$(jq -n \
            --arg html "$HTML_CONTENT" \
            --arg css "$CSS_CONTENT" \
            --arg js "$JS_CONTENT" \
            '{ files: { "index.html": { content: $html }, "style.css": { content: $css }, "app.js": { content: $js } } }')

          echo "Payload for Previous Content: $PAYLOAD"

          RESPONSE=$(curl -s -X POST 'https://codesandbox.io/api/v1/sandboxes/define?json=1' \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD")

          echo "Response from CodeSandbox (Previous): $RESPONSE"
          
          SANDBOX_ID=$(echo "$RESPONSE" | jq -r '.sandbox_id')
          if [[ "$SANDBOX_ID" == "null" ]]; then
            echo "Error: CodeSandbox ID is null. Check the response for more details."
            exit 1
          fi

          echo "Generated Sandbox ID (Previous): $SANDBOX_ID"
          echo "::set-output name=prev_sandbox_id::$SANDBOX_ID"

      - name: Create CodeSandbox with New Content
        id: create_new_sandbox
        run: |
          HTML_CONTENT=$(cat new_index.html | tr '\n' ' ')
          CSS_CONTENT=$(cat new_style.css | tr '\n' ' ')
          JS_CONTENT=$(cat new_app.js | tr '\n' ' ')

          PAYLOAD=$(jq -n \
            --arg html "$HTML_CONTENT" \
            --arg css "$CSS_CONTENT" \
            --arg js "$JS_CONTENT" \
            '{ files: { "index.html": { content: $html }, "style.css": { content: $css }, "app.js": { content: $js } }')

          echo "Payload for New Content: $PAYLOAD"

          RESPONSE=$(curl -s -X POST 'https://codesandbox.io/api/v1/sandboxes/define?json=1' \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD")

          echo "Response from CodeSandbox (New): $RESPONSE"
          
          SANDBOX_ID=$(echo "$RESPONSE" | jq -r '.sandbox_id')
          if [[ "$SANDBOX_ID" == "null" ]]; then
            echo "Error: CodeSandbox ID is null. Check the response for more details."
            exit 1
          fi

          echo "Generated Sandbox ID (New): $SANDBOX_ID"
          echo "::set-output name=new_sandbox_id::$SANDBOX_ID"

      - name: Display CodeSandbox URLs
        run: |
          echo "View the previous CodeSandbox at: https://codesandbox.io/s/${{ steps.create_prev_sandbox.outputs.prev_sandbox_id }}"
          echo "View the new CodeSandbox at: https://codesandbox.io/s/${{ steps.create_new_sandbox.outputs.new_sandbox_id }}"
